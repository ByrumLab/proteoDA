% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_proteins.R
\name{filter_proteins_by_group}
\alias{filter_proteins_by_group}
\title{Filter protein data by number of quantified samples in group}
\usage{
filter_proteins_by_group(
  DAList,
  min_reps = NULL,
  min_groups = NULL,
  grouping_column = "group"
)
}
\arguments{
\item{DAList}{A DAList object to be filtered.}

\item{min_reps}{The minimum number of replicates/samples within a group
that need to have non-missing intensity for a given protein/peptide for that
peptide to be considered as quantified within a group.}

\item{min_groups}{The minimum number of groups that must have at
least min_reps non-zero samples for a given protein/peptide to be retained.}

\item{grouping_column}{The name of the column in the metadata which provides
the group membership for each sample. Default is "group".}
}
\value{
A DAList, with proteins that are not present in sufficient samples
and groups removed.
}
\description{
This function is used to remove proteins from a DAList, filtering out proteins
based on levels of missing data in the data data frame of the DAList. The
grouping_column must be a column in the metadata of the DAList which lists the
group membership for each sample. The min_reps and min_groups arguments determine
the number of replicates/samples per group (min_reps) and number of groups
(min_groups) in which a protein must have non-missing intensity values
in order to be retained. This function assumes that all missing values are encoded
as NA. See \code{\link{zero_to_missing}} and \code{\link{missing_to_zero}} for helper
functions to convert missing values to and from 0.
}
\examples{

\dontrun{
  # Suppose the DAList contains data from 20 samples across 4
  # experimental groups (5 samples per group), with the group membership
  # listed in a column names "group"

  # Strict filtering:
  # no missing data
  # Proteins must be present in all samples in all groups
  filtered <- filter_proteins_by_group(DAList,
                                       min_reps = 5,
                                       min_groups = 4,
                                       grouping_column = "group")
  # Lax filtering:
  # protein must be present in at least one sample in each group
  filtered <- filter_proteins_by_group(DAList,
                                       min_reps = 1,
                                       min_groups = 4,
                                       grouping_column = "group")

 # Filtering functions can be chained together
 filtered <- DAList |>
   filter_proteins_by_annotation(!grepl(pattern = "keratin",
                                        x = protein_name)) |>
   filter_proteins_by_group(min_reps = 1,
                            min_groups = 4,
                            grouping_column = "group")
}

}
